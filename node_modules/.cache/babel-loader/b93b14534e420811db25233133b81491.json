{"ast":null,"code":"var _jsxFileName = \"/Users/ozmatron/therapy_box/client/src/pages/image-page.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\nimport styles from './styles/image-page.module.css';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass ImageUpload extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      switch (e.target.name) {\n        case 'selectedFile':\n          this.setState({\n            selectedFile: e.target.files[0]\n          });\n          break;\n\n        default:\n          this.setState({\n            [e.target.name]: e.target.value\n          });\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        userId,\n        selectedFile\n      } = this.state;\n      let formData = new FormData();\n      formData.append('userId', userId);\n      formData.append('selectedFile', selectedFile);\n      axios.post('http://localhost:8080/api/upload', formData).then(result => {\n        console.log(result);\n      });\n    };\n\n    this.state = {\n      userId: '',\n      selectedFile: '',\n      getImages: false,\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.userId) {\n      this.getUserId();\n    }\n  }\n\n  getUserId() {\n    axios.get(`http://localhost:8080/api/user_data`).then(response => {\n      this.setState({\n        userId: response.data.id\n      });\n    });\n  }\n\n  getImages() {\n    axios.get(`http://localhost:8080/api/images/` + this.state.userId).then(response => {\n      this.setState({\n        getImages: true\n      });\n      this.setState({\n        images: response.data\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.getImages && this.state.userId) {\n      this.getImages();\n    }\n\n    console.log(this.state.images);\n    const {\n      userId,\n      selectedFile\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"selectedFile\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Submit\"));\n  }\n\n} //     constructor(props) {\n//         super(props);\n//          this.state = { \n//             pictures: [],\n//             userId: null\n//             };\n//          this.onDrop = this.onDrop.bind(this);\n//     }\n//     componentDidMount() {\n//         if (!this.state.userId) {\n//           this.getUserId();\n//         }\n//       }\n//     getUserId() {\n//         axios.get(`http://localhost:8080/api/user_data`)\n//         .then((response) => {\n//             this.setState({userId: response.data.id})\n//         })\n//     }\n//     onDrop(picture) {\n//         this.setState({\n//             pictures: this.state.pictures.concat(picture),\n//         });\n//     }\n//     uploadImage() {\n//         const formData = new FormData()\n//         formData.append('upload', this.state.pictures)\n//         console.log(this.state.pictures)\n//         for (var key of formData.entries()) {\n//             console.log(key[0] + ', ' + key[1]);\n//         }\n//         const config = {\n//             headers: {\n//                 'content-type': 'multipart/form-data'\n//             }\n//         };\n//         axios.post(\"http://localhost:8080/api/upload\", formData, config, {\n//         }).then(res => {\n//             console.log(res)\n//         })\n//     }\n//   render() {\n//       if (this.state.pictures.length > 0) {\n//           this.uploadImage()\n//       }\n//     return (\n//         <React.Fragment>\n//             <Row className={styles.title}>\n//                 <Col xs={12} >\n//                     <h1>Image Upload</h1>\n//                 </Col>\n//             </Row>\n//             <Row className={styles.wrapper} >\n//                 <Col xs={6} >\n//                     <ImageUploader\n//                     withIcon={true}\n//                     buttonText='Choose images'\n//                     onChange={this.onDrop}\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\n//                     maxFileSize={5242880}\n//                 />\n//                 </Col>\n//             </Row>\n//         </React.Fragment>\n//     );\n//   }\n// }\n\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/ozmatron/therapy_box/client/src/pages/image-page.js"],"names":["React","axios","ImageUploader","styles","Grid","Row","Col","ImageUpload","Component","constructor","onChange","e","target","name","setState","selectedFile","files","value","onSubmit","preventDefault","userId","state","formData","FormData","append","post","then","result","console","log","getImages","images","componentDidMount","getUserId","get","response","data","id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\nimport styles from './styles/image-page.module.css'; \nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass ImageUpload extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n          userId: '',\n          selectedFile: '',\n          getImages: false,\n          images: []\n        };\n      }\n\n      componentDidMount() {\n        if (!this.state.userId) {\n          this.getUserId();\n        }\n      }\n\n      getUserId() {\n        axios.get(`http://localhost:8080/api/user_data`)\n        .then((response) => {\n          this.setState({userId: response.data.id})\n        })\n      }\n\n      getImages() {\n        axios.get(`http://localhost:8080/api/images/` + this.state.userId)\n        .then((response) => {\n            this.setState({getImages: true})\n            this.setState({images: response.data})\n          })\n      }\n\n      onChange = (e) => {\n        switch (e.target.name) {\n          case 'selectedFile':\n            this.setState({ selectedFile: e.target.files[0] });\n            break;\n          default:\n            this.setState({ [e.target.name]: e.target.value });\n        }\n      }\n\n      onSubmit = (e) => {\n        e.preventDefault();\n        const { userId, selectedFile } = this.state;\n        let formData = new FormData();\n\n        formData.append('userId', userId);\n        formData.append('selectedFile', selectedFile);\n\n        axios.post('http://localhost:8080/api/upload', formData)\n          .then((result) => {\n              console.log(result)\n          });\n      }\n\n      render() {\n        if (!this.state.getImages && this.state.userId) {\n            this.getImages();\n          }\n        console.log(this.state.images)\n        const { userId, selectedFile } = this.state;\n        return (\n          <form onSubmit={this.onSubmit}>\n            {/* <input\n              type=\"text\"\n              name=\"userId\"\n              value={userId}\n              onChange={this.onChange}\n            /> */}\n            <input\n              type=\"file\"\n              name=\"selectedFile\"\n              onChange={this.onChange}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        );\n      }\n    }\n\n//     constructor(props) {\n//         super(props);\n//          this.state = { \n//             pictures: [],\n//             userId: null\n//             };\n//          this.onDrop = this.onDrop.bind(this);\n//     }\n\n//     componentDidMount() {\n//         if (!this.state.userId) {\n//           this.getUserId();\n//         }\n//       }\n    \n//     getUserId() {\n//         axios.get(`http://localhost:8080/api/user_data`)\n//         .then((response) => {\n//             this.setState({userId: response.data.id})\n//         })\n//     }\n\n//     onDrop(picture) {\n//         this.setState({\n//             pictures: this.state.pictures.concat(picture),\n//         });\n//     }\n\n//     uploadImage() {\n//         const formData = new FormData()\n//         formData.append('upload', this.state.pictures)\n//         console.log(this.state.pictures)\n//         for (var key of formData.entries()) {\n//             console.log(key[0] + ', ' + key[1]);\n//         }\n//         const config = {\n//             headers: {\n//                 'content-type': 'multipart/form-data'\n//             }\n//         };\n//         axios.post(\"http://localhost:8080/api/upload\", formData, config, {\n//         }).then(res => {\n//             console.log(res)\n//         })\n//     }\n\n//   render() {\n//       if (this.state.pictures.length > 0) {\n//           this.uploadImage()\n//       }\n//     return (\n//         <React.Fragment>\n//             <Row className={styles.title}>\n//                 <Col xs={12} >\n//                     <h1>Image Upload</h1>\n//                 </Col>\n//             </Row>\n//             <Row className={styles.wrapper} >\n//                 <Col xs={6} >\n//                     <ImageUploader\n//                     withIcon={true}\n//                     buttonText='Choose images'\n//                     onChange={this.onDrop}\n//                     imgExtension={['.jpg', '.gif', '.png', '.gif']}\n//                     maxFileSize={5242880}\n//                 />\n//                 </Col>\n//             </Row>\n        \n//         </React.Fragment>\n//     );\n//   }\n// }\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}