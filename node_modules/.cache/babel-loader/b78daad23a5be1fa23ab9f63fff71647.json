{"ast":null,"code":"import _classCallCheck from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import styles from'./styles/tasks-page.module.css';import{Grid,Row,Col}from'react-flexbox-grid';var TasksPage=/*#__PURE__*/function(_React$Component){_inherits(TasksPage,_React$Component);var _super=_createSuper(TasksPage);function TasksPage(props){var _this;_classCallCheck(this,TasksPage);_this=_super.call(this,props);_this.typingTimer=null;_this.taskHandler=function(event){var id=event.target.id;var task=event.target.value;var val=event.target.value;clearTimeout(_this.typingTimer);_this.typingTimer=setTimeout(function(){if(val){_this.putTask(id,task,false);}},500);};_this.completeHandler=function(event){var id=event.target.id;var checked=event.target.value;var task;_this.state.tasks.map(function(task,index){return task.id===id?task=task.task:null;});if(checked===\"on\"){_this.putTask(id,task,true);}else{_this.putTask(id,task,false);}};_this.newTaskHandler=function(event){var task=event.target.value;_this.setState({newTask:task});};_this.submitHandler=function(event){event.preventDefault();if(_this.state.newTask){_this.postTask(_this.state.newTask);}_this.setState({getTasks:false});};_this.state={userId:null,getTasks:false,tasks:[],newTask:''};return _this;}_createClass(TasksPage,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.state.userId){this.getUserId();}}},{key:\"getUserId\",value:function getUserId(){var _this2=this;axios.get(\"https://therapy-node.herokuapp.com/api/user_data\").then(function(response){_this2.setState({userId:response.data.id});});}},{key:\"getTasks\",value:function getTasks(){var _this3=this;axios.get(\"https://therapy-node.herokuapp.com/api/tasks/\"+this.state.userId).then(function(response){_this3.setState({getTasks:true});_this3.setState({tasks:response.data});});}},{key:\"postTask\",value:function postTask(task){axios.post(\"https://therapy-node.herokuapp.com/api/task\",{task:task,complete:false,user_id:this.state.userId}).then(function(res){console.log(res);});}},{key:\"putTask\",value:function putTask(id,task,complete){axios.put(\"https://therapy-node.herokuapp.com/api/task/\"+id,{task:task,complete:complete,user_id:this.state.userId}).then(function(res){console.log(res);});}},{key:\"render\",value:function render(){var _this4=this;if(!this.state.getTasks&&this.state.userId){this.getTasks();}var inputs;var checkboxes;if(this.state.tasks!=={}){inputs=this.state.tasks.map(function(task,index){return/*#__PURE__*/React.createElement(Row,{className:styles.input},/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:task.id,placeholder:task.task,onChange:_this4.taskHandler}))));});checkboxes=this.state.tasks.map(function(task,index){return task.complete===true?/*#__PURE__*/React.createElement(Row,{className:styles.checkbox},/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",id:task.id,onChange:_this4.completeHandler,checked:true})))):/*#__PURE__*/React.createElement(Row,{className:styles.checkbox},/*#__PURE__*/React.createElement(Col,{xs:12},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",id:task.id,onChange:_this4.completeHandler}))));});}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:styles.title},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Tasks\"))),/*#__PURE__*/React.createElement(Row,{className:styles.wrapper},/*#__PURE__*/React.createElement(Col,{xs:8},inputs),/*#__PURE__*/React.createElement(Col,{xs:4},checkboxes),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.submitHandler},/*#__PURE__*/React.createElement(\"p\",null,\"Add new task\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",onChange:this.newTaskHandler}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\"}))));}}]);return TasksPage;}(React.Component);export default TasksPage;","map":{"version":3,"sources":["/Users/ozmatron/therapy-client/src/pages/tasks-page.js"],"names":["React","axios","styles","Grid","Row","Col","TasksPage","props","typingTimer","taskHandler","event","id","target","task","value","val","clearTimeout","setTimeout","putTask","completeHandler","checked","state","tasks","map","index","newTaskHandler","setState","newTask","submitHandler","preventDefault","postTask","getTasks","userId","getUserId","get","then","response","data","post","complete","user_id","res","console","log","put","inputs","checkboxes","input","checkbox","title","wrapper","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport styles from './styles/tasks-page.module.css'; \nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass TasksPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        userId: null,\n        getTasks: false,\n        tasks: [],\n        newTask: ''\n    };\n  }\n\n  typingTimer = null;\n\n  componentDidMount() {\n    if (!this.state.userId) {\n      this.getUserId();\n    }\n  }\n\n  getUserId() {\n    axios.get(`https://therapy-node.herokuapp.com/api/user_data`)\n    .then((response) => {\n      this.setState({userId: response.data.id})\n    })\n  }\n\n  getTasks() {\n    axios.get(`https://therapy-node.herokuapp.com/api/tasks/` + this.state.userId)\n    .then((response) => {\n        this.setState({getTasks: true})\n        this.setState({tasks: response.data})\n      })\n  }\n\n  taskHandler = (event) => {\n    let id = event.target.id\n    let task = event.target.value\n    const val = event.target.value;\n    clearTimeout(this.typingTimer);\n    this.typingTimer = setTimeout(() => {\n    if (val) {\n      this.putTask(id, task, false)\n    }\n    }, 500);\n  }\n\n  completeHandler = (event) => {\n    let id = event.target.id\n    let checked = event.target.value\n    let task\n    this.state.tasks.map((task, index) => \n      task.id === id ?\n      task = task.task : null\n    );\n    if (checked === \"on\") {\n      this.putTask(id, task, true)\n    }\n    else {\n      this.putTask(id, task, false)\n    }\n  }\n\n  newTaskHandler = (event) => {\n    let task = event.target.value\n    this.setState({newTask: task})\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    if (this.state.newTask) {\n      this.postTask(this.state.newTask)\n      }\n    this.setState({getTasks: false})\n    }\n\n  postTask(task) {\n    axios.post(`https://therapy-node.herokuapp.com/api/task`, {\n      task: task,\n      complete: false,\n      user_id: this.state.userId\n      })\n      .then(res => {\n        console.log(res)\n      })\n  }\n\n  putTask(id, task, complete) {\n    axios.put(`https://therapy-node.herokuapp.com/api/task/` + id, {\n      task: task,\n      complete: complete,\n      user_id: this.state.userId\n      })\n      .then(res => {\n        console.log(res)\n      })\n  }\n\n  render() {\n    if (!this.state.getTasks && this.state.userId) {\n      this.getTasks();\n    }\n    let inputs\n    let checkboxes\n    if (this.state.tasks !== {}) {\n      inputs = this.state.tasks.map((task, index) => \n          <Row className={styles.input}>\n          <Col xs={12} >\n          <form><input\n          type='text'\n          id= {task.id}\n          placeholder = {task.task}\n          onChange={this.taskHandler}\n          />\n          </form>\n          </Col>\n          </Row>\n        );\n      checkboxes = this.state.tasks.map((task, index) =>\n          task.complete === true ?\n          <Row className={styles.checkbox}>\n          <Col xs={12} >\n          <form>\n          <input \n            type=\"checkbox\" \n            id={task.id}\n            onChange={this.completeHandler}\n            checked\n            />\n            </form> \n            </Col>\n            </Row>:\n            <Row className={styles.checkbox}>\n            <Col xs={12} >\n            <form><input \n            type=\"checkbox\" \n            id={task.id}\n            onChange={this.completeHandler}\n            />\n            </form>\n            </Col>\n            </Row>\n        );\n    }\n\n    return (\n    <React.Fragment>\n        <Row className={styles.title}>\n        <Col >\n            <h1>Tasks</h1>\n        </Col>\n        </Row>\n      <Row className={styles.wrapper}>\n        <Col xs={8} >\n          {inputs}\n        </Col>\n        <Col xs={4}>    \n          {checkboxes}\n        </Col>\n          <form onSubmit={this.submitHandler}>\n          <p>Add new task</p>\n            <input\n            type='text'\n            onChange={this.newTaskHandler}\n            />\n            <input\n              type='submit'\n            />\n          </form>\n        </Row>\n    </React.Fragment>\n    );\n  }\n}\n\nexport default TasksPage ;"]},"metadata":{},"sourceType":"module"}