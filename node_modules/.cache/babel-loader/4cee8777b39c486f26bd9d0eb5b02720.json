{"ast":null,"code":"import _classCallCheck from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';var NewsPreview=/*#__PURE__*/function(_React$Component){_inherits(NewsPreview,_React$Component);var _super=_createSuper(NewsPreview);function NewsPreview(props){var _this;_classCallCheck(this,NewsPreview);_this=_super.call(this,props);_this.state={headline:\"No news today\",desc:null};return _this;}_createClass(NewsPreview,[{key:\"componentDidMount\",value:function componentDidMount(){this.getNews();}},{key:\"getNews\",value:function getNews(){var _this2=this;axios.get(\"https://feeds.bbci.co.uk/news/rss.xml\").then(function(response){var parser=new DOMParser();var xmlDoc=parser.parseFromString(response.data,\"text/xml\");var topStory=xmlDoc.getElementsByTagName(\"item\")[0];if(topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue){_this2.setState({headline:topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue});}if(topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue){_this2.setState({desc:topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue});}});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,this.state.headline),/*#__PURE__*/React.createElement(\"p\",null,this.state.desc));}}]);return NewsPreview;}(React.Component);export default NewsPreview;","map":{"version":3,"sources":["/Users/ozmatron/therapy-client/src/components/news.js"],"names":["React","axios","NewsPreview","props","state","headline","desc","getNews","get","then","response","parser","DOMParser","xmlDoc","parseFromString","data","topStory","getElementsByTagName","childNodes","nodeValue","setState","Component"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,W,sHACJ,qBAAYC,KAAZ,CAAmB,6CACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,QAAQ,CAAE,eADD,CAETC,IAAI,CAAE,IAFG,CAAb,CAFiB,aAKlB,C,qFAEmB,CAClB,KAAKC,OAAL,GACD,C,yCAES,iBACRN,KAAK,CAACO,GAAN,0CACCC,IADD,CACM,SAACC,QAAD,CAAc,CAChB,GAAIC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,SAAJ,EAAb,CACA,GAAIC,CAAAA,MAAM,CAAGF,MAAM,CAACG,eAAP,CAAuBJ,QAAQ,CAACK,IAAhC,CAAsC,UAAtC,CAAb,CACA,GAAIC,CAAAA,QAAQ,CAAGH,MAAM,CAACI,oBAAP,CAA4B,MAA5B,EAAoC,CAApC,CAAf,CACA,GAAID,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,EAA0CC,UAA1C,CAAqD,CAArD,EAAwDC,SAA5D,CAAuE,CACnE,MAAI,CAACC,QAAL,CAAc,CAACf,QAAQ,CAAEW,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,EAA0CC,UAA1C,CAAqD,CAArD,EAAwDC,SAAnE,CAAd,EACH,CACD,GAAIH,QAAQ,CAACC,oBAAT,CAA8B,aAA9B,EAA6C,CAA7C,EAAgDC,UAAhD,CAA2D,CAA3D,EAA8DC,SAAlE,CAA6E,CACzE,MAAI,CAACC,QAAL,CAAc,CAACd,IAAI,CAAEU,QAAQ,CAACC,oBAAT,CAA8B,aAA9B,EAA6C,CAA7C,EAAgDC,UAAhD,CAA2D,CAA3D,EAA8DC,SAArE,CAAd,EACH,CACJ,CAXD,EAYD,C,uCAEQ,CACP,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,8BAAK,KAAKf,KAAL,CAAWC,QAAhB,CADF,cAEE,6BAAI,KAAKD,KAAL,CAAWE,IAAf,CAFF,CADF,CAMD,C,yBAlCuBN,KAAK,CAACqB,S,EAqChC,cAAenB,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass NewsPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        headline: \"No news today\",\n        desc: null,    };\n  }\n\n  componentDidMount() {\n    this.getNews();\n  }\n\n  getNews() {\n    axios.get(`https://feeds.bbci.co.uk/news/rss.xml`)\n    .then((response) => {\n        var parser = new DOMParser();\n        var xmlDoc = parser.parseFromString(response.data, \"text/xml\")\n        var topStory = xmlDoc.getElementsByTagName(\"item\")[0]\n        if (topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue) {\n            this.setState({headline: topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue}) \n        }\n        if (topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue) {\n            this.setState({desc: topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue}) \n        }\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h3>{this.state.headline}</h3>\n        <p>{this.state.desc}</p>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NewsPreview;"]},"metadata":{},"sourceType":"module"}