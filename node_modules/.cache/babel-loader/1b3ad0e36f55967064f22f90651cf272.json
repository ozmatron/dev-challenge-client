{"ast":null,"code":"var _jsxFileName = \"/Users/ozmatron/therapy_box/client/src/pages/image-page.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\nimport styles from './styles/image-page.module.css';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass ImageUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      userId: null\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.userId) {\n      this.getUserId();\n    }\n  }\n\n  getUserId() {\n    axios.get(`http://localhost:8080/api/user_data`).then(response => {\n      this.setState({\n        userId: response.data.id\n      });\n    });\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n  }\n\n  uploadImage() {\n    const formData = new FormData();\n    formData.append('upload', this.state.pictures[0]);\n    console.log(this.state.pictures);\n\n    for (var key of formData.entries()) {\n      console.log(key[0] + ', ' + key[1]);\n    }\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post(\"http://localhost:8080/api/upload\", formData, config, {}).then(res => {\n      console.log(res);\n    });\n  }\n\n  render() {\n    //   console.log(this.state.pictures[0])\n    if (this.state.pictures.length > 0) {\n      this.uploadImage();\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Image Upload\"))), /*#__PURE__*/React.createElement(Row, {\n      className: styles.wrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ImageUploader, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: this.onDrop,\n      imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n      maxFileSize: 5242880,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }))));\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/ozmatron/therapy_box/client/src/pages/image-page.js"],"names":["React","axios","ImageUploader","styles","Grid","Row","Col","ImageUpload","Component","constructor","props","state","pictures","userId","onDrop","bind","componentDidMount","getUserId","get","then","response","setState","data","id","picture","concat","uploadImage","formData","FormData","append","console","log","key","entries","config","headers","post","res","render","length","title","wrapper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\nimport styles from './styles/image-page.module.css'; \nimport { Grid, Row, Col } from 'react-flexbox-grid';\n\nclass ImageUpload extends React.Component {\n    constructor(props) {\n        super(props);\n         this.state = { \n            pictures: [],\n            userId: null\n            };\n         this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        if (!this.state.userId) {\n          this.getUserId();\n        }\n      }\n    \n    getUserId() {\n        axios.get(`http://localhost:8080/api/user_data`)\n        .then((response) => {\n            this.setState({userId: response.data.id})\n        })\n    }\n\n    onDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        });\n    }\n\n    uploadImage() {\n        const formData = new FormData()\n        formData.append('upload', this.state.pictures[0])\n        console.log(this.state.pictures)\n        for (var key of formData.entries()) {\n            console.log(key[0] + ', ' + key[1]);\n        }\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n        axios.post(\"http://localhost:8080/api/upload\", formData, config, {\n        }).then(res => {\n            console.log(res)\n        })\n    }\n\n  render() {\n    //   console.log(this.state.pictures[0])\n      if (this.state.pictures.length > 0) {\n          this.uploadImage()\n      }\n    return (\n        <React.Fragment>\n            <Row className={styles.title}>\n                <Col xs={12} >\n                    <h1>Image Upload</h1>\n                </Col>\n            </Row>\n            <Row className={styles.wrapper} >\n                <Col xs={6} >\n                    <ImageUploader\n                    withIcon={true}\n                    buttonText='Choose images'\n                    onChange={this.onDrop}\n                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                    maxFileSize={5242880}\n                />\n                </Col>\n            </Row>\n        \n        </React.Fragment>\n    );\n  }\n}\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}