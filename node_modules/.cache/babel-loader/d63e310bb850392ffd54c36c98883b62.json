{"ast":null,"code":"import _classCallCheck from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';var TasksPreview=/*#__PURE__*/function(_React$Component){_inherits(TasksPreview,_React$Component);var _super=_createSuper(TasksPreview);function TasksPreview(props){var _this;_classCallCheck(this,TasksPreview);_this=_super.call(this,props);_this.typingTimer=null;_this.state={userId:null,getTasks:false,tasks:[]};return _this;}_createClass(TasksPreview,[{key:\"componentDidMount\",value:function componentDidMount(){if(!this.state.userId){this.getUserId();}}},{key:\"getUserId\",value:function getUserId(){var _this2=this;axios.get(\"http://localhost:8080/api/user_data\").then(function(response){_this2.setState({userId:response.data.id});});}},{key:\"getTasks\",value:function getTasks(){var _this3=this;axios.get(\"http://localhost:8080/api/tasks/\"+this.state.userId).then(function(response){_this3.setState({getTasks:true});_this3.setState({tasks:response.data});});}},{key:\"render\",value:function render(){if(!this.state.getTasks&&this.state.userId){this.getTasks();}var tasks;if(this.state.tasks!=={}){tasks=this.state.tasks.map(function(task,index){return index<3?/*#__PURE__*/React.createElement(\"p\",null,task.task):null;});}return/*#__PURE__*/React.createElement(React.Fragment,null,tasks);}}]);return TasksPreview;}(React.Component);export default TasksPreview;","map":{"version":3,"sources":["/Users/ozmatron/therapy-client/src/components/tasks-preview.js"],"names":["React","axios","TasksPreview","props","typingTimer","state","userId","getTasks","tasks","getUserId","get","then","response","setState","data","id","map","task","index","Component"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,GAEMC,CAAAA,Y,wHACF,sBAAYC,KAAZ,CAAmB,8CACf,uBAAMA,KAAN,EADe,MASjBC,WATiB,CASH,IATG,CAEf,MAAKC,KAAL,CAAa,CACTC,MAAM,CAAE,IADC,CAETC,QAAQ,CAAE,KAFD,CAGTC,KAAK,CAAE,EAHE,CAAb,CAFe,aAOhB,C,sFAImB,CAClB,GAAI,CAAC,KAAKH,KAAL,CAAWC,MAAhB,CAAwB,CACtB,KAAKG,SAAL,GACD,CACF,C,6CAEW,iBACVR,KAAK,CAACS,GAAN,wCACCC,IADD,CACM,SAACC,QAAD,CAAc,CAClB,MAAI,CAACC,QAAL,CAAc,CAACP,MAAM,CAAEM,QAAQ,CAACE,IAAT,CAAcC,EAAvB,CAAd,EACD,CAHD,EAID,C,2CAEU,iBACTd,KAAK,CAACS,GAAN,CAAU,mCAAqC,KAAKL,KAAL,CAAWC,MAA1D,EACCK,IADD,CACM,SAACC,QAAD,CAAc,CAChB,MAAI,CAACC,QAAL,CAAc,CAACN,QAAQ,CAAE,IAAX,CAAd,EACA,MAAI,CAACM,QAAL,CAAc,CAACL,KAAK,CAAEI,QAAQ,CAACE,IAAjB,CAAd,EACD,CAJH,EAKD,C,uCACI,CACP,GAAI,CAAC,KAAKT,KAAL,CAAWE,QAAZ,EAAwB,KAAKF,KAAL,CAAWC,MAAvC,CAA+C,CAC3C,KAAKC,QAAL,GACD,CACD,GAAIC,CAAAA,KAAJ,CACA,GAAI,KAAKH,KAAL,CAAWG,KAAX,GAAqB,EAAzB,CAA6B,CAC3BA,KAAK,CAAG,KAAKH,KAAL,CAAWG,KAAX,CAAiBQ,GAAjB,CAAqB,SAACC,IAAD,CAAOC,KAAP,QACzBA,CAAAA,KAAK,CAAG,CAAR,cACA,6BAAID,IAAI,CAACA,IAAT,CADA,CAEE,IAHuB,EAArB,CAAR,CAKD,CACH,mBACI,oBAAC,KAAD,CAAO,QAAP,MACKT,KADL,CADJ,CAKD,C,0BAjDwBR,KAAK,CAACmB,S,EAoDjC,cAAejB,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass TasksPreview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            userId: null,\n            getTasks: false,\n            tasks: [],\n        };\n      }\n    \n      typingTimer = null;\n    \n      componentDidMount() {\n        if (!this.state.userId) {\n          this.getUserId();\n        }\n      }\n    \n      getUserId() {\n        axios.get(`http://localhost:8080/api/user_data`)\n        .then((response) => {\n          this.setState({userId: response.data.id})\n        })\n      }\n    \n      getTasks() {\n        axios.get(`http://localhost:8080/api/tasks/` + this.state.userId)\n        .then((response) => {\n            this.setState({getTasks: true})\n            this.setState({tasks: response.data})\n          })\n      }\n  render() {\n    if (!this.state.getTasks && this.state.userId) {\n        this.getTasks();\n      }\n      let tasks\n      if (this.state.tasks !== {}) {\n        tasks = this.state.tasks.map((task, index) => \n            index < 3 ?\n            <p>{task.task}</p>\n            : null\n          );\n      }\n    return (\n        <React.Fragment>\n            {tasks}\n        </React.Fragment>\n    );\n  }\n}\n\nexport default TasksPreview;"]},"metadata":{},"sourceType":"module"}