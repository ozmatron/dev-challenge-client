{"ast":null,"code":"var _jsxFileName = \"/Users/ozmatron/therapy_box/client/src/components/news.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass NewsPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      headline: null,\n      desc: null\n    };\n  }\n\n  componentDidMount() {\n    this.getNews();\n  }\n\n  getNews() {\n    axios.get(`http://feeds.bbci.co.uk/news/rss.xml`).then(response => {\n      // console.log(response.data)\n      var parser = new DOMParser();\n      var xmlDoc = parser.parseFromString(response.data, \"text/xml\");\n      var topStory = xmlDoc.getElementsByTagName(\"item\")[0];\n      console.log(topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue);\n\n      if (topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue) {\n        this.setState({\n          headline: topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue\n        });\n      }\n\n      if (topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue) {\n        this.setState({\n          desc: topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue\n        });\n      } //   this.setState({weather: response.data.weather[0].main})\n      //   this.setState({locationName: response.data.name})\n\n    });\n  }\n\n  render() {\n    console.log(\"duff\", this.state);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, this.state.headline), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, this.state.desc));\n  }\n\n}\n\nexport default NewsPreview;","map":{"version":3,"sources":["/Users/ozmatron/therapy_box/client/src/components/news.js"],"names":["React","axios","NewsPreview","Component","constructor","props","state","headline","desc","componentDidMount","getNews","get","then","response","parser","DOMParser","xmlDoc","parseFromString","data","topStory","getElementsByTagName","console","log","childNodes","nodeValue","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL;AACD;;AAEDA,EAAAA,OAAO,GAAG;AACRT,IAAAA,KAAK,CAACU,GAAN,CAAW,sCAAX,EACCC,IADD,CACOC,QAAD,IAAc;AAChB;AACA,UAAIC,MAAM,GAAG,IAAIC,SAAJ,EAAb;AACA,UAAIC,MAAM,GAAGF,MAAM,CAACG,eAAP,CAAuBJ,QAAQ,CAACK,IAAhC,EAAsC,UAAtC,CAAb;AACA,UAAIC,QAAQ,GAAGH,MAAM,CAACI,oBAAP,CAA4B,MAA5B,EAAoC,CAApC,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,EAA0CG,UAA1C,CAAqD,CAArD,EAAwDC,SAApE;;AACA,UAAIL,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,EAA0CG,UAA1C,CAAqD,CAArD,EAAwDC,SAA5D,EAAuE;AACnE,aAAKC,QAAL,CAAc;AAAClB,UAAAA,QAAQ,EAAEY,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,EAA0CG,UAA1C,CAAqD,CAArD,EAAwDC;AAAnE,SAAd;AACH;;AACD,UAAIL,QAAQ,CAACC,oBAAT,CAA8B,aAA9B,EAA6C,CAA7C,EAAgDG,UAAhD,CAA2D,CAA3D,EAA8DC,SAAlE,EAA6E;AACzE,aAAKC,QAAL,CAAc;AAACjB,UAAAA,IAAI,EAAEW,QAAQ,CAACC,oBAAT,CAA8B,aAA9B,EAA6C,CAA7C,EAAgDG,UAAhD,CAA2D,CAA3D,EAA8DC;AAArE,SAAd;AACH,OAXe,CAYhB;AACJ;;AACC,KAfD;AAgBD;;AAEDE,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKhB,KAAzB;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKA,KAAL,CAAWC,QAAhB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,IAAhB,CAFF,CADF;AAMD;;AAvCuC;;AA0C1C,eAAeN,WAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass NewsPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        headline: null,\n        desc: null,    };\n  }\n\n  componentDidMount() {\n    this.getNews();\n  }\n\n  getNews() {\n    axios.get(`http://feeds.bbci.co.uk/news/rss.xml`)\n    .then((response) => {\n        // console.log(response.data)\n        var parser = new DOMParser();\n        var xmlDoc = parser.parseFromString(response.data, \"text/xml\")\n        var topStory = xmlDoc.getElementsByTagName(\"item\")[0]\n        console.log(topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue)\n        if (topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue) {\n            this.setState({headline: topStory.getElementsByTagName(\"title\")[0].childNodes[0].nodeValue}) \n        }\n        if (topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue) {\n            this.setState({desc: topStory.getElementsByTagName(\"description\")[0].childNodes[0].nodeValue}) \n        }\n        //   this.setState({weather: response.data.weather[0].main})\n    //   this.setState({locationName: response.data.name})\n    })\n  }\n\n  render() {\n    console.log(\"duff\", this.state);\n    return (\n      <React.Fragment>\n        <h1>{this.state.headline}</h1>\n        <h1>{this.state.desc}</h1>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NewsPreview;"]},"metadata":{},"sourceType":"module"}