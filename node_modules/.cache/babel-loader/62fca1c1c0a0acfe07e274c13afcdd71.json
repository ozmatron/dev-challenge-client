{"ast":null,"code":"var _jsxFileName = \"/Users/ozmatron/therapy-client/src/components/image-preview.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass ImagePreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.typingTimer = null;\n    this.state = {\n      userId: null,\n      getImages: false,\n      image: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.userId) {\n      this.getUserId();\n    }\n  }\n\n  getUserId() {\n    axios.get(`http://localhost:8080/api/user_data`).then(response => {\n      this.setState({\n        userId: response.data.id\n      });\n    });\n  }\n\n  getImages() {\n    let imgFile = [];\n    axios.get(`http://localhost:8080/api/images/` + this.state.userId).then(response => {\n      if (response.data.length > 0) {\n        console.log(response.data[0]);\n      }\n\n      this.setState({\n        getImages: true\n      });\n      this.setState({\n        images: response.data\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.getImages && this.state.userId) {\n      this.getImages();\n    }\n\n    let image;\n\n    if (this.state.images !== {}) {// image = this.state.images.map((img) => \n      // console.log('img',img)\n      //   );\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, image);\n  }\n\n}\n\nexport default ImagePreview;","map":{"version":3,"sources":["/Users/ozmatron/therapy-client/src/components/image-preview.js"],"names":["React","axios","ImagePreview","Component","constructor","props","typingTimer","state","userId","getImages","image","componentDidMount","getUserId","get","then","response","setState","data","id","imgFile","length","console","log","images","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SASjBC,WATiB,GASH,IATG;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,IADC;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKJ,KAAL,CAAWC,MAAhB,EAAwB;AACtB,WAAKI,SAAL;AACD;AACF;;AAEDA,EAAAA,SAAS,GAAG;AACVX,IAAAA,KAAK,CAACY,GAAN,CAAW,qCAAX,EACCC,IADD,CACOC,QAAD,IAAc;AAClB,WAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAEO,QAAQ,CAACE,IAAT,CAAcC;AAAvB,OAAd;AACD,KAHD;AAID;;AAEDT,EAAAA,SAAS,GAAG;AACV,QAAIU,OAAO,GAAG,EAAd;AACAlB,IAAAA,KAAK,CAACY,GAAN,CAAW,mCAAD,GAAsC,KAAKN,KAAL,CAAWC,MAA3D,EACCM,IADD,CACOC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACE,IAAT,CAAcG,MAAd,GAAuB,CAA3B,EAA8B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAZ;AACH;;AACD,WAAKD,QAAL,CAAc;AAACP,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACA,WAAKO,QAAL,CAAc;AAACO,QAAAA,MAAM,EAAER,QAAQ,CAACE;AAAlB,OAAd;AACD,KAPH;AAQD;;AACLO,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKjB,KAAL,CAAWE,SAAZ,IAAyB,KAAKF,KAAL,CAAWC,MAAxC,EAAgD;AAC5C,WAAKC,SAAL;AACD;;AACD,QAAIC,KAAJ;;AACA,QAAI,KAAKH,KAAL,CAAWgB,MAAX,KAAsB,EAA1B,EAA8B,CAC5B;AACA;AAEA;AACD;;AACH,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKb,KADL,CADJ;AAKD;;AApDwC;;AAuD3C,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass ImagePreview extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            userId: null,\n            getImages: false,\n            image: [],\n        };\n      }\n    \n      typingTimer = null;\n    \n      componentDidMount() {\n        if (!this.state.userId) {\n          this.getUserId();\n        }\n      }\n    \n      getUserId() {\n        axios.get(`http://localhost:8080/api/user_data`)\n        .then((response) => {\n          this.setState({userId: response.data.id})\n        })\n      }\n    \n      getImages() {\n        let imgFile = []\n        axios.get(`http://localhost:8080/api/images/` + this.state.userId)\n        .then((response) => {\n            if (response.data.length > 0) {\n                console.log(response.data[0])\n            }\n            this.setState({getImages: true})\n            this.setState({images: response.data})\n          })\n      }\n  render() {\n    if (!this.state.getImages && this.state.userId) {\n        this.getImages();\n      }\n      let image\n      if (this.state.images !== {}) {\n        // image = this.state.images.map((img) => \n        // console.log('img',img)\n\n        //   );\n      }\n    return (\n        <React.Fragment>\n            {image}\n        </React.Fragment>\n    );\n  }\n}\n\nexport default ImagePreview;"]},"metadata":{},"sourceType":"module"}