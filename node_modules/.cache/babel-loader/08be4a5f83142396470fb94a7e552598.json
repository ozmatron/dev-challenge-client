{"ast":null,"code":"var _jsxFileName = \"/Users/ozmatron/therapy_box/client/src/components/image.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\n\nclass Image extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      name: \"Images!\",\n      userId: null\n    };\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.userId) {\n      this.getUserId();\n    }\n  }\n\n  getUserId() {\n    axios.get(`http://localhost:8080/api/user_data`).then(response => {\n      this.setState({\n        userId: response.data.id\n      });\n    });\n  }\n\n  onDrop(picture) {\n    this.setState({\n      pictures: this.state.pictures.concat(picture)\n    });\n  }\n\n  uploadImage() {\n    const formData = new FormData();\n    formData.append('upload', this.state.pictures[0]);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    axios.post(\"http://localhost:8080/api/upload\", formData, config, {}).then(res => {\n      console.log(res);\n    });\n  }\n\n  render() {\n    console.log(this.state.pictures[0]);\n\n    if (this.state.pictures.length > 0) {\n      this.uploadImage();\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(ImageUploader, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: this.onDrop,\n      imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n      maxFileSize: 5242880,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Image;","map":{"version":3,"sources":["/Users/ozmatron/therapy_box/client/src/components/image.js"],"names":["React","axios","ImageUploader","Image","Component","constructor","props","state","pictures","name","userId","onDrop","bind","componentDidMount","getUserId","get","then","response","setState","data","id","picture","concat","uploadImage","formData","FormData","append","config","headers","post","res","console","log","render","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACC,SAAKC,KAAL,GAAa;AACVC,MAAAA,QAAQ,EAAE,EADA;AAEVC,MAAAA,IAAI,EAAE,SAFI;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAb;AAKA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,CAAC,KAAKN,KAAL,CAAWG,MAAhB,EAAwB;AACtB,WAAKI,SAAL;AACD;AACF;;AAEHA,EAAAA,SAAS,GAAG;AACRb,IAAAA,KAAK,CAACc,GAAN,CAAW,qCAAX,EACCC,IADD,CACOC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AAACR,QAAAA,MAAM,EAAEO,QAAQ,CAACE,IAAT,CAAcC;AAAvB,OAAd;AACH,KAHD;AAIH;;AAEDT,EAAAA,MAAM,CAACU,OAAD,EAAU;AACZ,SAAKH,QAAL,CAAc;AACVV,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAAX,CAAoBc,MAApB,CAA2BD,OAA3B;AADA,KAAd;AAGH;;AAEDE,EAAAA,WAAW,GAAG;AACV,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0B,KAAKnB,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAA1B;AACA,UAAMmB,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAKA3B,IAAAA,KAAK,CAAC4B,IAAN,CAAW,kCAAX,EAA+CL,QAA/C,EAAyDG,MAAzD,EAAiE,EAAjE,EACGX,IADH,CACQc,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAHD;AAIH;;AAEHG,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAZ;;AACA,QAAI,KAAKD,KAAL,CAAWC,QAAX,CAAoB0B,MAApB,GAA6B,CAAjC,EAAoC;AAChC,WAAKX,WAAL;AACH;;AACH,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKhB,KAAL,CAAWE,IAAhB,CADJ,eAEI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,UAAU,EAAC,eAFf;AAGI,MAAA,QAAQ,EAAE,KAAKE,MAHnB;AAII,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAJlB;AAKI,MAAA,WAAW,EAAE,OALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAYD;;AA7DiC;;AAgEpC,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport ImageUploader from 'react-images-upload';\n\nclass Image extends React.Component {\n    constructor(props) {\n        super(props);\n         this.state = { \n            pictures: [],\n            name: \"Images!\",\n            userId: null\n            };\n         this.onDrop = this.onDrop.bind(this);\n    }\n\n    componentDidMount() {\n        if (!this.state.userId) {\n          this.getUserId();\n        }\n      }\n    \n    getUserId() {\n        axios.get(`http://localhost:8080/api/user_data`)\n        .then((response) => {\n            this.setState({userId: response.data.id})\n        })\n    }\n\n    onDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        });\n    }\n\n    uploadImage() {\n        const formData = new FormData()\n        formData.append('upload', this.state.pictures[0])\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        axios.post(\"http://localhost:8080/api/upload\", formData, config, {\n        }).then(res => {\n            console.log(res)\n        })\n    }\n\n  render() {\n      console.log(this.state.pictures[0])\n      if (this.state.pictures.length > 0) {\n          this.uploadImage()\n      }\n    return (\n        <React.Fragment>\n            <h1>{this.state.name}</h1>\n            <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n            />\n        </React.Fragment>\n    );\n  }\n}\n\nexport default Image;"]},"metadata":{},"sourceType":"module"}