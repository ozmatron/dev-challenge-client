{"ast":null,"code":"var _jsxFileName = \"/Users/ozmatron/therapy_box/client/src/components/weather.js\";\nimport React from 'react';\nimport axios from 'axios';\n\nclass WeatherPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: 51.4939446,\n      lon: -0.0841836\n    };\n  }\n\n  componentDidMount() {\n    var lat = null;\n    var lon = null;\n\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        if (position.coords.latitude && position.coords.longitude) {\n          lat = position.coords.latitude;\n          lon = position.coords.longitude;\n        }\n      });\n    }\n\n    if (lat !== 0 && lon !== 0) {\n      this.setState({\n        lat: lat\n      });\n      his.setState({\n        lon: lon\n      });\n    }\n  }\n\n  render() {\n    console.log(\"Latitude is :\", this.state.lat);\n    console.log(\"Longitude is :\", this.state.lon);\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, this.state.name);\n  }\n\n}\n\nexport default WeatherPreview;","map":{"version":3,"sources":["/Users/ozmatron/therapy_box/client/src/components/weather.js"],"names":["React","axios","WeatherPreview","Component","constructor","props","state","lat","lon","componentDidMount","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setState","his","render","console","log","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,UADI;AAETC,MAAAA,GAAG,EAAE,CAAC;AAFG,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIF,GAAG,GAAG,IAAV;AACA,QAAIC,GAAG,GAAG,IAAV;;AACA,QAAI,iBAAiBE,SAArB,EAAgC;AAC5BA,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AACxD,YAAIA,QAAQ,CAACC,MAAT,CAAgBC,QAAhB,IAA4BF,QAAQ,CAACC,MAAT,CAAgBE,SAAhD,EAA2D;AACvDT,UAAAA,GAAG,GAAGM,QAAQ,CAACC,MAAT,CAAgBC,QAAtB;AACAP,UAAAA,GAAG,GAAGK,QAAQ,CAACC,MAAT,CAAgBE,SAAtB;AACH;AACF,OALH;AAMH;;AACD,QAAIT,GAAG,KAAK,CAAR,IAAaC,GAAG,KAAK,CAAzB,EAA4B;AACxB,WAAKS,QAAL,CAAc;AAACV,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACAW,MAAAA,GAAG,CAACD,QAAJ,CAAa;AAACT,QAAAA,GAAG,EAAEA;AAAN,OAAb;AACH;AACF;;AAEDW,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKf,KAAL,CAAWC,GAAxC;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAKf,KAAL,CAAWE,GAAzC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKF,KAAL,CAAWgB,IAAhB,CADF;AAGD;;AAhC0C;;AAmC7C,eAAepB,cAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass WeatherPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        lat: 51.4939446,\n        lon: -0.0841836\n    };\n  }\n\n  componentDidMount() {\n    var lat = null\n    var lon = null\n    if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function(position) {       \n            if (position.coords.latitude && position.coords.longitude) {\n                lat = position.coords.latitude;\n                lon = position.coords.longitude\n            }\n          });\n    }\n    if (lat !== 0 && lon !== 0) {\n        this.setState({lat: lat}) \n        his.setState({lon: lon});\n    }\n  }\n\n  render() {\n    console.log(\"Latitude is :\", this.state.lat);\n    console.log(\"Longitude is :\", this.state.lon);\n    return (\n      <h1>{this.state.name}</h1>\n    );\n  }\n}\n\nexport default WeatherPreview;"]},"metadata":{},"sourceType":"module"}