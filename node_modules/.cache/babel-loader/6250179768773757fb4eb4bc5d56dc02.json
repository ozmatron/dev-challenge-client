{"ast":null,"code":"import _classCallCheck from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/ozmatron/therapy-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import{Grid,Row,Col}from'react-flexbox-grid';import clouds from'./Clouds.png';var WeatherPreview=/*#__PURE__*/function(_React$Component){_inherits(WeatherPreview,_React$Component);var _super=_createSuper(WeatherPreview);function WeatherPreview(props){var _this;_classCallCheck(this,WeatherPreview);_this=_super.call(this,props);_this.state={lat:null,lon:null,temp:null,weather:null,locationName:null};return _this;}_createClass(WeatherPreview,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var lat=null;var lon=null;if(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(function(position){if(position.coords.latitude&&position.coords.longitude){lat=position.coords.latitude;lon=position.coords.longitude;_this2.setState({lat:lat});_this2.setState({lon:lon});}});}}},{key:\"getWeather\",value:function getWeather(){var _this3=this;axios.get(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(this.state.lat,\"&lon=\").concat(this.state.lon,\"&appid=d0a10211ea3d36b0a6423a104782130e\")).then(function(response){_this3.setState({temp:Math.round(response.data.main.temp-273.15)});_this3.setState({weather:response.data.weather[0].main});_this3.setState({locationName:response.data.name});});}},{key:\"render\",value:function render(){if(this.state.lat&&this.state.lon){this.getWeather();}var imgsrc;if(this.state.weather===\"Clouds\"){imgsrc=require('./../icons/Clouds.png');}if(this.state.weather===\"Rain\"){imgsrc=require('./../icons/Rain.png');}if(this.state.weather===\"Clear\"){imgsrc=require('./../icons/Rain.png');}var img;if(imgsrc){img=/*#__PURE__*/React.createElement(\"img\",{src:imgsrc,alt:\"Logo\"});}else{img=this.state.weather;}var temp;if(this.state.temp){temp=/*#__PURE__*/React.createElement(\"h3\",null,this.state.temp,\" degress\");}var locationName;if(this.state.locationName){locationName=/*#__PURE__*/React.createElement(\"h3\",null,this.state.locationName);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:6},img),/*#__PURE__*/React.createElement(Col,{xs:6},temp)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:12},locationName)));}}]);return WeatherPreview;}(React.Component);export default WeatherPreview;","map":{"version":3,"sources":["/Users/ozmatron/therapy-client/src/components/weather.js"],"names":["React","axios","Grid","Row","Col","clouds","WeatherPreview","props","state","lat","lon","temp","weather","locationName","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setState","get","then","response","Math","round","data","main","name","getWeather","imgsrc","require","img","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport clouds from './Clouds.png';\n\nclass WeatherPreview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        lat: null,\n        lon: null,\n        temp: null,\n        weather: null,\n        locationName: null\n    };\n  }\n\n  componentDidMount() {\n    var lat = null\n    var lon = null\n    if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(position => {       \n            if (position.coords.latitude && position.coords.longitude) {\n                lat = position.coords.latitude;\n                lon = position.coords.longitude\n                this.setState({lat: lat}) \n                this.setState({lon: lon});\n            }\n          });\n    }\n  }\n\n  getWeather() {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.lat}&lon=${this.state.lon}&appid=d0a10211ea3d36b0a6423a104782130e`)\n    .then((response) => {\n      this.setState({temp: Math.round(response.data.main.temp -273.15)}) \n      this.setState({weather: response.data.weather[0].main})\n      this.setState({locationName: response.data.name})\n    })\n  }\n\n  render() {\n    if (this.state.lat && this.state.lon) {\n        this.getWeather();\n    }\n    let imgsrc\n    if (this.state.weather === \"Clouds\") {\n        imgsrc = require('./../icons/Clouds.png')\n    }\n    if (this.state.weather === \"Rain\") {\n        imgsrc = require('./../icons/Rain.png')\n    }\n    if (this.state.weather === \"Clear\") {\n        imgsrc = require('./../icons/Rain.png')\n    }\n    let img\n    if (imgsrc) {\n        img = <img src={imgsrc} alt=\"Logo\" />;\n    }\n    else {\n        img = this.state.weather\n    }\n    let temp\n    if (this.state.temp) {\n        temp = <h3>{this.state.temp} degress</h3>\n    }\n    let locationName\n    if (this.state.locationName) {\n        locationName = <h3>{this.state.locationName}</h3>\n    }\n\n    return (\n        <React.Fragment>\n        <Row>\n            <Col xs={6} >\n                {img}\n            </Col>\n            <Col xs={6}>\n                {temp}\n            </Col>\n        </Row>\n        <Row>\n            <Col xs={12} >\n                {locationName}\n            </Col>\n        </Row>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default WeatherPreview;"]},"metadata":{},"sourceType":"module"}